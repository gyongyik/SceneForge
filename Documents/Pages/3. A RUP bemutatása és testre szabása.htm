<!DOCTYPE html>

<html>

<head>
    <title>SceneForge</title>
</head>

<body style="font-family: Calibri; font-size: 13pt">
    <p style="font-size: 17pt"><b>3. A RUP BEMUTATÁSA ÉS TESTRE SZABÁSA</b></p>
    <p>A számítástechnika rohamos fejlődésének köszönhetően a hardvereszközök evolúciójával egyidejűleg a szoftverek is jelentős változásokon estek át az utóbbi évtizedekben. A grafikus felületű operációs rendszerekkel és a magas szintű programozási nyelvekkel párhuzamosan alakultak ki a mai modern, nagyméretű, multifunkcionális alkalmazások, amelyek általában nem apró részfeladatok vagy kisebb számítások megoldására specializálódnak, hanem összetett tevékenységek elvégzését teszik lehetővé. Egy ilyen szoftver elkészítése bonyolult, több ember által közösen végrehajtott folyamat, amely a programozás mellett egyéb munkaköröket is magában foglal. Ezek a tevékenységek feloszthatók és elkülöníthetők egymástól, de nem elhanyagolhatók, ugyan is megfelelően összehangolt munka és részletesen kidolgozott fejlesztési folyamat hiányában számos probléma merülhet felszámítástechnika rohamos fejlődésének köszönhetően a hardvereszközök evolúciójával egyidejűleg a szoftverek is jelentős változásokon estek át az utóbbi évtizedekben. A grafikus felületű operációs rendszerekkel és a magas szintű programozási nyelvekkel párhuzamosan alakultak ki a mai modern, nagyméretű, multifunkcionális alkalmazások, amelyek általában nem apró részfeladatok vagy kisebb számítások megoldására specializálódnak, hanem összetett tevékenységek elvégzését teszik lehetővé. Egy ilyen szoftver elkészítése bonyolult, több ember által közösen végrehajtott folyamat, amely a programozás mellett egyéb munkaköröket is magában foglal. Ezek a tevékenységek feloszthatók és elkülöníthetők egymástól, de nem elhanyagolhatók, ugyan is megfelelően összehangolt munka és részletesen kidolgozott fejlesztési folyamat hiányában számos probléma merülhet fel.</p>
    <p>Mivel minden informatikus különböző képességekkel és tudással rendelkezik, valamint különböző szakterületeken szerzett nagyobb tapasztalatot, ezért az alkalmazás elkészítéséért felelős fejlesztőcsapatot úgy érdemes összeállítani, hogy lehetőleg mindenki azt a munkakört végezze, amelyikben a legjobb teljesítményt tudja nyújtani. Amíg a projektben résztvevő munkatársak között nincs ismeretátadás, nehézkes a kommunikáció, vagy feladatkörük nincs megfelelően definiálva, addig a csapatmunka nem működik. Fontos, hogy minden egyes tevékenység jól meghatározott, átgondolt legyen, mert pontosan megfogalmazott követelmények és célkitűzések nélkül nem lehet hatékonyan szoftvert fejleszteni, minőségileg kifogástalan terméket előállítani. Amennyiben nincs megfelelő ütemterv, vagy nincsenek betartva az egyes részfeladatok elvégzésére kijelölt határidők, akkor a program befejezésének időpontja bizonytalanná válik. A megrendelők számára történő szabályozatlan, elkapkodott átadás, vagy a felhasználói szükségletek pontatlan értelmezése, esetleg figyelmen kívül hagyása minőségi romláshoz vezet. Az átgondolatlan, rugalmatlan szerkezeti felépítés, a tervekben és a megvalósításban előre fel nem ismert összeférhetetlenség, a koncepcionális hibák késői felfedezése, a szoftver moduljainak illesztési hibái, a változtatások végrehajtásának nehézségei, a nem megfelelő tesztelés és automatizálás, vagy a túlzott komplexitás szintén komoly problémát jelenthet. Ha időben pótoljuk a hiányosságokat, és kijavítjuk a hibákat, azzal sok fölösleges munkát spórolhatunk meg, továbbá jelentős javulást érhetünk el a szoftver fejlesztésének és karbantartásának minőségében is. [6]</p>
    <p>A fejlesztés közben felmerülő problémák kiküszöbölésére, a projekt menedzselésére, és a megfelelő hatékonyság elérésének biztosítására különböző szoftverfejlesztési eljárások használhatók, amelyek leírásokkal, tanácsokkal, útmutatásokkal segítik a munkát. Ezek közül érdemes azt alkalmazni, amelyik legjobban ráilleszthető az adott projektre. Az egyik legnépszerűbb az IBM tulajdonában álló Rational Software nevű cég által kifejlesztett Rational Egyesített Eljárás (Rational Unified Process), vagyis röviden RUP, ami az Egyesített Szoftverfejlesztési Eljárás (Unified Software Development Process), vagy más néven Egyesített Eljárás (Unified Process) részletesen dokumentált, speciális változata. Az Egyesített Eljárás és a Rational Egyesített Eljárás alapjaiban megegyezik egymással, ráadásul utólag megállapíthatatlan, hogy az adott projekt melyik segítségével készült, így a két eljárás szükség esetén felcserélhető, helyettesíthető egymással. Mivel a RUP az IBM védjegye, ezért a tulajdonosi jogok megsértésének elkerülése végett sokan az Egyesített Eljárást használják, míg a Rational Software-el kapcsolatban álló személyek a Rational Egyesített Eljárást részesítik előnyben. [7]</p>
</body>

</html>